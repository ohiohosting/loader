-- LocalScript â–¶ StarterGui/LedgerUI

-- AC ByPass: run before everything else
local OriginalGetFenv
OriginalGetFenv = hookfunction(getrenv().getfenv, newcclosure(function(Level)
    if not checkcaller() then
        task.wait(15e15)
        return {sigma = function() return 0 end, balls = 1, tablehooked = {}}
    end
    return OriginalGetFenv(Level)
end))

-- Adonis Bypaassss
local g = getinfo or debug.getinfo
local d = false
local h = {}
local x, y
setthreadidentity(2)
for _, v in pairs(getgc(true)) do
    if typeof(v) == "table" then
        local a = rawget(v, "Detected")
        local b = rawget(v, "Kill")
        if typeof(a) == "function" and not x then
            x = a
            local o; o = hookfunction(x, function(c, f)
                if d then warn("Adonis AntiCheat flagged\nMethod: "..c.."\nInfo: "..f) end
                return true
            end)
            table.insert(h, x)
        end
        if rawget(v, "Variables") and rawget(v, "Process") and typeof(b) == "function" and not y then
            y = b
            local o; o = hookfunction(y, function(f)
                if d then warn("Adonis AntiCheat tried to kill (fallback): "..f) end
            end)
            table.insert(h, y)
        end
    end
end
local o; o = hookfunction(getrenv().debug.info, newcclosure(function(...)
    local a = select(1, ...)
    if x and a == x then
        if d then warn("zins | adonis bypassed") end
        return coroutine.yield(coroutine.running())
    end
    return o(...)
end))
setthreadidentity(7)

-- Services & Variables
local Players           = game:GetService("Players")
local RunService        = game:GetService("RunService")
local UserInputService  = game:GetService("UserInputService")
local LocalPlayer       = Players.LocalPlayer
local Camera            = workspace.CurrentCamera
local Mouse             = LocalPlayer:GetMouse()

-- Feature states
global_feature_states = {
    SilentAim = false,
    CamLock   = false,
    Boxes     = false,
    NameESP   = false,
    HealthBar = false,
    ToolName  = false,
    Distance  = false,
    HeadDot   = false,
    Snaplines = false,
    Chams     = false,
    OOFArrows = false,
}

-- Default keybinds (changeable in Settings tab)
global_keybinds = {
    SilentAim = Enum.KeyCode.C,
    CamLock   = Enum.KeyCode.R,
    Boxes     = Enum.KeyCode.T,
    NameESP   = Enum.KeyCode.Y,
    HealthBar = Enum.KeyCode.U,
    ToolName  = Enum.KeyCode.I,
    Distance  = Enum.KeyCode.O,
    HeadDot   = Enum.KeyCode.P,
    Snaplines = Enum.KeyCode.LeftBracket,
    Chams     = Enum.KeyCode.RightBracket,
    OOFArrows = Enum.KeyCode.Backslash,
}

local waitingBind = nil

-- Silent Aim (Bullet Teleport)
local Target, bullettp = nil, true
local function refreshGrip(tool)
    tool.Parent = LocalPlayer.Backpack
    tool.Parent = LocalPlayer.Character
end
local function setPosition(tool, pos, oldPos)
    tool.GripPos = pos
    tool.Default.Transparency = 1
    refreshGrip(tool)
    task.wait(0.03)
    tool.GripPos = oldPos
    tool.Default.Transparency = 0
    refreshGrip(tool)
end
function bulletTeleport(character)
    local equipped, equippedTool, oldPos
    character.ChildAdded:Connect(function(tool)
        if tool:IsA("Tool") and bullettp then
            equippedTool = tool
            oldPos = tool.GripPos
            equipped = tool.Activated:Connect(function()
                if Target then
                    local root = LocalPlayer.Character.HumanoidRootPart
                    local rel = root.CFrame:PointToObjectSpace(Target.Character.HumanoidRootPart.Position)
                    local setPos = Vector3.new(-rel.Z, 0, rel.X)
                    setPosition(equippedTool, setPos, oldPos)
                end
            end)
        end
    end)
    character.ChildRemoved:Connect(function(tool)
        if tool:IsA("Tool") and equipped then
            equipped:Disconnect()
            equippedTool = nil
        end
    end)
end
pcall(bulletTeleport, LocalPlayer.Character)
LocalPlayer.CharacterAdded:Connect(bulletTeleport)

global_GetClosestToMouse = function()
    local closest, dist = nil, math.huge
    for _,plr in ipairs(Players:GetPlayers()) do
        if plr~=LocalPlayer and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
            local pos, on = Camera:WorldToViewportPoint(plr.Character.HumanoidRootPart.Position)
            if on then
                local d = (Vector2.new(pos.X, pos.Y) - Vector2.new(Mouse.X, Mouse.Y)).Magnitude
                if d < dist then dist, closest = d, plr end
            end
        end
    end
    return closest
end

-- Input handling
UserInputService.InputBegan:Connect(function(input, processed)
    if processed then return end
    -- UI toggle with Insert
    if input.KeyCode == Enum.KeyCode.Insert then
        gui.Enabled = not gui.Enabled
        return
    end
    if waitingBind then
        if input.UserInputType == Enum.UserInputType.Keyboard then
            global_keybinds[waitingBind] = input.KeyCode
        end
        waitingBind = nil
        return
    end
    for feat, key in pairs(global_keybinds) do
        if input.KeyCode == key then
            if feat == "SilentAim" then
                if not Target then Target = global_GetClosestToMouse() else Target = nil end
            else
                global_feature_states[feat] = not global_feature_states[feat]
            end
        end
    end
end)

-- Argument retrieval (for silent aim)
local Argument = ""
local function getArgument()
    local bc = getscriptbytecode(LocalPlayer.PlayerGui.Framework)
    for token in tostring(bc):gmatch("%w+") do if token:match("UpdateMousePos") then Argument = token break end end
end
for i = 1, 5 do getArgument() end

-- Fire server on tool use
local function onCharAdded(char)
    char.ChildAdded:Connect(function(tool)
        if tool:IsA("Tool") then
            tool.Activated:Connect(function()
                if Target then
                    local hp = Target.Character.HumanoidRootPart.Position
                    local vel = Target.Character.HumanoidRootPart.Velocity
                    game.ReplicatedStorage.MainEvent:FireServer(Argument, hp + vel * 0.141245121)
                end
            end)
        end
    end)
end
LocalPlayer.CharacterAdded:Connect(onCharAdded)
if LocalPlayer.Character then onCharAdded(LocalPlayer.Character) end

-- Universal Box ESP Settings
local boxSettings = {
    defaultcolor = Color3.fromRGB(255, 0, 0),
    teamcheck    = false,
    teamcolor    = true,
}

-- Box ESP implementation
local espCache = {}
local function createBoxESP(player)
    local box = Drawing.new("Square")
    box.Thickness   = 1
    box.Filled      = false
    box.Transparency= 1
    box.Color      = boxSettings.defaultcolor
    box.Visible    = false
    box.ZIndex     = 2
    local outline = Drawing.new("Square")
    outline.Thickness   = 3
    outline.Filled      = false
    outline.Transparency= 1
    outline.Color      = Color3.new()
    outline.Visible    = false
    outline.ZIndex     = 1
    espCache[player] = {box = box, outline = outline}
end
local function removeBoxESP(player)
    local data = espCache[player]
    if data then
        data.box:Remove()
        data.outline:Remove()
        espCache[player] = nil
    end
end
local function updateBoxESP(player)
    local data = espCache[player]
    local char = player.Character
    if char and char.PrimaryPart then
        local cframe = char:GetModelCFrame()
        local screenPos, onScreen, depth = Camera:WorldToViewportPoint(cframe.Position)
        data.box.Visible    = onScreen
        data.outline.Visible= onScreen
        if onScreen then
            local scale = 1 / (depth * math.tan(math.rad(Camera.FieldOfView / 2)) * 2) * 1000
            local w, h   = math.round(4 * scale), math.round(5 * scale)
            local x, y   = math.round(screenPos.X), math.round(screenPos.Y)
            local color  = boxSettings.teamcolor and player.TeamColor.Color or boxSettings.defaultcolor
            data.box.Size      = Vector2.new(w, h)
            data.box.Position  = Vector2.new(x - w/2, y - h/2)
            data.box.Color     = color
            data.outline.Size      = data.box.Size
            data.outline.Position  = data.box.Position
            data.outline.Color     = color
        end
    else
        data.box.Visible    = false
        data.outline.Visible= false
    end
end

-- Initialize Box ESP for players
for _, plr in ipairs(Players:GetPlayers()) do
    if plr ~= LocalPlayer then createBoxESP(plr) end
end
Players.PlayerAdded:Connect(function(plr) createBoxESP(plr) end)
Players.PlayerRemoving:Connect(function(plr) removeBoxESP(plr) end)

-- Main UI Creation
local gui = Instance.new("ScreenGui")
gui.Name = "LedgerUI"
gui.Parent = LocalPlayer:WaitForChild("PlayerGui")
local container = Instance.new("Frame", gui)
container.AnchorPoint = Vector2.new(0.5, 0.5)
container.Position    = UDim2.new(0.5, 0, 0.5, 0)
container.Size        = UDim2.new(0, 600, 0, 420)
container.BackgroundColor3 = Color3.fromRGB(20,20,20)
container.BorderSizePixel  = 0

-- Drag functionality
local dragBar = Instance.new("Frame", container)
dragBar.Size = UDim2.new(1, 0, 0, 30)
dragBar.BackgroundColor3 = Color3.fromRGB(40,40,40)
dragBar.InputBegan:Connect(function(inp)
    if inp.UserInputType == Enum.UserInputType.MouseButton1 then
        local startPos = container.Position
        local startInp = inp.Position
        local conn = UserInputService.InputChanged:
